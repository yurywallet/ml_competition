# -*- coding: utf-8 -*-
"""
Created on Tue Dec 25 18:50:42 2018

@author: Yury
"""

POINT_FEATURE_FILTERS = [
    ('tagged', lambda  node: len(node.tags) > 0),
    ('railway', lambda node: ((node.tags.get('railway') == 'station') |
                             (node.tags.get('railway') == 'halt')  ) &
                             (node.tags.get('station') != 'subway')),
    
    ('subway', lambda node: (node.tags.get('railway') == 'station') &
                             (node.tags.get('station') == 'subway')),
    
    ('public_transport', lambda node: 'public_transport' in node.tags),
    

    
    ('pharmacy' , lambda node: (node.tags.get('shop')=='drugstore') |
                                (node.tags.get('amenity')== 'pharmacy')),
            
    
    
    ('traf_sign', lambda node: node.tags.get('highway')== 'traffic_signals'),
    ('traf_junc', lambda node: node.tags.get('highway')== 'motorway_junction'),
    ('traf_cross', lambda node: (node.tags.get('crossing')== 'uncontrolled') and (node.tags.get('highway')=='crossing')),

    ('playground', lambda node: 'playground' in node.tags),
    ('kindergarten', lambda node: (node.tags.get('amenity')=='kindergarten') or (node.tags.get('building')=='kindergarten')),
    ('school', lambda node: (node.tags.get('amenity')=='school') or (node.tags.get('building')=='school')),
    
    ('leisure', lambda node: 'leisure' in node.tags),
    ('rest_bars', lambda node: node.tags.get('amenity') in ['cafe',
                                                            'fast_food',
                                                            'restaurant',
                                                            'bar',
                                                            'pub',
                                                            'nightclub',
                                                            'stripclub',
                                                            'sauna',
                                                            'food_court',
                                                            'love_hotel',
                                                            'club',
                                                            'cafeteria',
                                                            'internet_cafe',
                                                            'biergarten'
                                                            ]),
    
    ('office', lambda node: (node.tags.get('building') in ['office','commercial']) |
                            (node.tags.get('amenity') in ['office','business_center'])),

    #landuse
    ('landuse_industrial', lambda node: node.tags.get('landuse')== 'industrial'),
    ('landuse_residential', lambda node: node.tags.get('landuse')== 'residential'),
    ('landuse_commercial', lambda node: node.tags.get('landuse')== 'commercial'),
    ('landuse_retail', lambda node: node.tags.get('landuse')== 'retail'),
    ('landuse_cemetery', lambda node: node.tags.get('landuse')== 'cemetery'),
    ('landuse_farmyard', lambda node: node.tags.get('landuse')== 'farmyard'),
    ('landuse_landfill', lambda node: node.tags.get('landuse')== 'landfill'),
    ('landuse_military', lambda node: node.tags.get('landuse')== 'military'),
    ('landuse_garages', lambda node: node.tags.get('landuse')== 'garages'),

    #amenities
    ('amenity_place_of_worship', lambda node: node.tags.get('amenity')== 'place_of_worship'),
    ('amenity_parking', lambda node: node.tags.get('amenity')== 'parking'),
    ('amenity_police', lambda node: node.tags.get('amenity')== 'police'),
    ('amenity_post_office', lambda node: node.tags.get('amenity')== 'post_office'),
    ('amenity_pharmacy', lambda node: node.tags.get('amenity')== 'pharmacy'),
    ('amenity_bank', lambda node: node.tags.get('amenity')== 'bank'),
    ('amenity_bus_station', lambda node: node.tags.get('amenity')== 'bus_station'),
    ('amenity_atm', lambda node: node.tags.get('amenity')== 'atm'),
    ('amenity_school', lambda node: node.tags.get('amenity')== 'school'),
    ('amenity_college', lambda node: node.tags.get('amenity')== 'college'),
    ('amenity_university', lambda node: node.tags.get('amenity')== 'university'),
    ('amenity_hospital', lambda node: node.tags.get('amenity')== 'hospital'),
    ('amenity_grave_yard', lambda node: node.tags.get('amenity')== 'grave_yard'),
    ('amenity_embassy', lambda node: node.tags.get('amenity')== 'embassy'),
    ('amenity_kindergarten', lambda node: node.tags.get('amenity')== 'kindergarten'),
    ('amenity_fire_station', lambda node: node.tags.get('amenity')== 'fire_station'),
    ('amenity_register_office', lambda node: node.tags.get('amenity')== 'register_office'),
    ('amenity_prison', lambda node: node.tags.get('amenity')== 'prison'),
    ('amenity_dormitory', lambda node: node.tags.get('amenity')== 'dormitory'),
    ('amenity_bbq', lambda node: node.tags.get('amenity')== 'bbq'),
    ('amenity_swimming_pool', lambda node: node.tags.get('amenity')== 'swimming_pool'),
    ('amenity_education', lambda node: node.tags.get('amenity')== 'education'),
    ('amenity_office', lambda node: node.tags.get('amenity')== 'office'),
    ('amenity_parking_space', lambda node: node.tags.get('amenity')== 'parking_space'),
    ('amenity_supplementary_education', lambda node: node.tags.get('amenity')== 'supplementary_education'),
    ('amenity_business_center', lambda node: node.tags.get('amenity')== 'business_center'),
    ('amenity_childcare', lambda node: node.tags.get('amenity')== 'childcare'),
    ('amenity_kids_area', lambda node: node.tags.get('amenity')== 'kids_area'),
    ('amenity_nursing_home', lambda node: node.tags.get('amenity')== 'nursing_home'),
    ('amenity_warehouse', lambda node: node.tags.get('amenity')== 'warehouse'),
    ('amenity_study', lambda node: node.tags.get('amenity')== 'study'),
    ('amenity_bussines_centre', lambda node: node.tags.get('amenity')== 'bussines_centre'),
    ('amenity_marketplace', lambda node: node.tags.get('amenity')== 'marketplace'),
    ('amenity_money_transfer', lambda node: node.tags.get('amenity')== 'money_transfer'),
    ('amenity_cafe', lambda node: node.tags.get('amenity')== 'cafe'),
    ('amenity_fast_food', lambda node: node.tags.get('amenity')== 'fast_food'),
    ('amenity_restaurant', lambda node: node.tags.get('amenity')== 'restaurant'),
    ('amenity_bar', lambda node: node.tags.get('amenity')== 'bar'),
    ('amenity_pub', lambda node: node.tags.get('amenity')== 'pub'),
    ('amenity_nightclub', lambda node: node.tags.get('amenity')== 'nightclub'),
    ('amenity_stripclub', lambda node: node.tags.get('amenity')== 'stripclub'),
    ('amenity_sauna', lambda node: node.tags.get('amenity')== 'sauna'),
    ('amenity_food_court', lambda node: node.tags.get('amenity')== 'food_court'),
    ('amenity_love_hotel', lambda node: node.tags.get('amenity')== 'love_hotel'),
    ('amenity_club', lambda node: node.tags.get('amenity')== 'club'),
    ('amenity_cafeteria', lambda node: node.tags.get('amenity')== 'cafeteria'),
    ('amenity_internet_cafe', lambda node: node.tags.get('amenity')== 'internet_cafe'),
    ('amenity_gambling', lambda node: node.tags.get('amenity')== 'gambling'),
    ('amenity_biergarten', lambda node: node.tags.get('amenity')== 'biergarten'),
    ('amenity_cinema', lambda node: node.tags.get('amenity')== 'cinema'),
    ('amenity_theatre', lambda node: node.tags.get('amenity')== 'theatre'),
    ('amenity_library', lambda node: node.tags.get('amenity')== 'library'),
    ('amenity_parking_entrance', lambda node: node.tags.get('amenity')== 'parking_entrance'),
    ('amenity_clinic', lambda node: node.tags.get('amenity')== 'clinic'),
    ('amenity_social_facility', lambda node: node.tags.get('amenity')== 'social_facility'),
    ('amenity_research_institution', lambda node: node.tags.get('amenity')== 'research_institution'),
    ('amenity_public_building', lambda node: node.tags.get('amenity')== 'public_building'),
    ('amenity_veterinary', lambda node: node.tags.get('amenity')== 'veterinary'),
    ('amenity_courthouse', lambda node: node.tags.get('amenity')== 'courthouse'),
    ('amenity_bureau_de_change', lambda node: node.tags.get('amenity')== 'bureau_de_change'),
    ('amenity_post_box', lambda node: node.tags.get('amenity')== 'post_box'),
    ('amenity_gym', lambda node: node.tags.get('amenity')== 'gym'),
    ('amenity_music_school', lambda node: node.tags.get('amenity')== 'music_school'),
    ('amenity_crematorium', lambda node: node.tags.get('amenity')== 'crematorium'),
    ('amenity_rescue_station', lambda node: node.tags.get('amenity')== 'rescue_station'),
    ('amenity_bench', lambda node: node.tags.get('amenity')== 'bench'),
    ('amenity_ice_cream', lambda node: node.tags.get('amenity')== 'ice_cream'),
    ('amenity_community_centre', lambda node: node.tags.get('amenity')== 'community_centre'),
    ('amenity_payment_centre', lambda node: node.tags.get('amenity')== 'payment_centre'),
    ('amenity_beauty', lambda node: node.tags.get('amenity')== 'beauty'),
    ('amenity_mortuary', lambda node: node.tags.get('amenity')== 'mortuary'),
    ('amenity_exhibition_center', lambda node: node.tags.get('amenity')== 'exhibition_center'),
    ('amenity_official', lambda node: node.tags.get('amenity')== 'official'),
    ('amenity_additional_education', lambda node: node.tags.get('amenity')== 'additional_education'),
    ('amenity_motorcycle_parking', lambda node: node.tags.get('amenity')== 'motorcycle_parking'),
    ('amenity_fire_station:type=spo', lambda node: node.tags.get('amenity')== 'fire_station:type=spo'),
    ('amenity_social_centre', lambda node: node.tags.get('amenity')== 'social_centre'),
    ('amenity_picnic_table', lambda node: node.tags.get('amenity')== 'picnic_table'),
    ('amenity_education_centre', lambda node: node.tags.get('amenity')== 'education_centre'),
    ('amenity_action_house', lambda node: node.tags.get('amenity')== 'action_house'),
    ('amenity_pulic_service', lambda node: node.tags.get('amenity')== 'pulic_service'),
    
    #building
    ('building_church', lambda node: node.tags.get('building')== 'church'),
    ('building_chapel', lambda node: node.tags.get('building')== 'chapel'),
    ('building_chapel', lambda node: node.tags.get('building')== 'mosque'),
    ('building_warehouse', lambda node: node.tags.get('building')== 'warehouse'),
    ('building_monastery', lambda node: node.tags.get('building')== 'monastery'),
    ('building_apartments', lambda node: node.tags.get('building')== 'apartments'),
    ('building_residential', lambda node: node.tags.get('building')== 'residential'),
    ('building_dormitory', lambda node: node.tags.get('building')== 'dormitory'),
    ('building_kindergarten', lambda node: node.tags.get('building')== 'kindergarten'),
    ('building_school', lambda node: node.tags.get('building')== 'school'),
    ('building_office', lambda node: node.tags.get('building')== 'office'),
    ('building_commercial', lambda node: node.tags.get('building')== 'commercial'),
    ('building_industrial', lambda node: node.tags.get('building')== 'industrial'),
    ('building_garage', lambda node: node.tags.get('building')== 'garage'),
    ('building_garages', lambda node: node.tags.get('building')== 'garages'),
    ('building_hangar', lambda node: node.tags.get('building')== 'hangar'),
    ('building_retail', lambda node: node.tags.get('building')== 'retail'),
    ('building_supermarket', lambda node: node.tags.get('building')== 'supermarket'),
    ('building_kiosk', lambda node: node.tags.get('building')== 'kiosk'),
    ('building_construction', lambda node: node.tags.get('building')== 'construction'),
    ('building_detached', lambda node: node.tags.get('building')== 'detached'),
    ('building_house', lambda node: node.tags.get('building')== 'house'),
    ('building_yes', lambda node: node.tags.get('building')== 'yes'),
    ('building_bunker', lambda node: node.tags.get('building')== 'bunker'),
    ('building_service', lambda node: node.tags.get('building')== 'service'),
    ('building_factory', lambda node: node.tags.get('building')== 'factory'),
    ('building_gate', lambda node: node.tags.get('building')== 'gate'),
    ('building_ventilation_kiosk', lambda node: node.tags.get('building')== 'ventilation_kiosk'),
    ('building_hut', lambda node: node.tags.get('building')== 'hut'),
    ('building_shed', lambda node: node.tags.get('building')== 'shed'),
    ('building_gazebo', lambda node: node.tags.get('building')== 'gazebo'),
    ('building_roof', lambda node: node.tags.get('building')== 'roof'),
    ('building_collapsed', lambda node: node.tags.get('building')== 'collapsed'),
    ('building_stable', lambda node: node.tags.get('building')== 'stable'),
    ('building_font', lambda node: node.tags.get('building')== 'font'),
    ('building_ruins', lambda node: node.tags.get('building')== 'ruins'),
    ('building_gas_station', lambda node: node.tags.get('building')== 'gas_station'),
    ('building_storage_tank', lambda node: node.tags.get('building')== 'storage_tank'),

    #shop
    ('shop', lambda node: 'shop' in node.tags),
    ('shop_sup', lambda node: (node.tags.get('shop')== 'supermarket') |
                                (node.tags.get('shop')== 'convenience') |
                                (node.tags.get('shop')== 'grocery')),
            
    ('shop_alco', lambda node: node.tags.get('shop') in ['convenience;alcohol',
                                                            'alcohol',
                                                            'beverages',
                                                            'tobacco',
                                                            'wine',
                                                            'beer'
                                                            ]),
    ('shop_mall', lambda node: node.tags.get('shop')== 'mall'),
    ('shop_toys', lambda node: node.tags.get('shop')== 'toys'),
    ('shop_erotic', lambda node: node.tags.get('shop')== 'erotic'),
    ('shop_baby_goods', lambda node: node.tags.get('shop')== 'baby_goods'),
    ('shop_kids', lambda node: node.tags.get('shop')== 'kids'),
    ('shop_art', lambda node: node.tags.get('shop')== 'art'),
    ('shop_drugstore', lambda node: node.tags.get('shop')== 'drugstore'),
    ('shop_tattoo', lambda node: node.tags.get('shop')== 'tattoo'),
    ('shop_souvenirs', lambda node: node.tags.get('shop')== 'souvenirs'),
    ('shop_nutrition_supplements', lambda node: node.tags.get('shop')== 'nutrition_supplements'),
    ('shop_pet_beauty', lambda node: node.tags.get('shop')== 'pet_beauty'),
    ('shop_children', lambda node: node.tags.get('shop')== 'children'),
    ('shop_sports_food', lambda node: node.tags.get('shop')== 'sports_food'),
    ('shop_nutrition_supplement', lambda node: node.tags.get('shop')== 'nutrition_supplement'),
    ('shop_weapons', lambda node: node.tags.get('shop')== 'weapons'),
    ('shop_guns', lambda node: node.tags.get('shop')== 'guns'),
    ('shop_military', lambda node: node.tags.get('shop')== 'military'),
    ('shop_convenience;alcohol', lambda node: node.tags.get('shop')== 'convenience;alcohol'),
    ('shop_alcohol', lambda node: node.tags.get('shop')== 'alcohol'),
    ('shop_beverages', lambda node: node.tags.get('shop')== 'beverages'),
    ('shop_tobacco', lambda node: node.tags.get('shop')== 'tobacco'),
    ('shop_wine', lambda node: node.tags.get('shop')== 'wine'),
    ('shop_beer', lambda node: node.tags.get('shop')== 'beer'),
    ('shop_organic', lambda node: node.tags.get('shop')== 'organic'),
    ('shop_health_food', lambda node: node.tags.get('shop')== 'health_food'),
    ('shop_lottery', lambda node: node.tags.get('shop')== 'lottery'),
    ('shop_bet', lambda node: node.tags.get('shop')== 'bet'),
    ('shop_money_lander', lambda node: node.tags.get('shop')== 'money_lander'),
    ('shop_grocery', lambda node: node.tags.get('shop')== 'grocery'),
    ('shop_supermarket', lambda node: node.tags.get('shop')== 'supermarket'),
    ('shop_convenience', lambda node: node.tags.get('shop')== 'convenience'),
    ('shop_jewelry', lambda node: node.tags.get('shop')== 'jewelry'),
    ('shop_boutique', lambda node: node.tags.get('shop')== 'boutique'),
    ('shop_antiques', lambda node: node.tags.get('shop')== 'antiques'),
    ('shop_yes', lambda node: node.tags.get('shop')== 'yes'),
    ('shop_furniture', lambda node: node.tags.get('shop')== 'furniture'),
    ('shop_doityourself', lambda node: node.tags.get('shop')== 'doityourself'),
    ('shop_no', lambda node: node.tags.get('shop')== 'no'),
    ('shop_books', lambda node: node.tags.get('shop')== 'books'),
    ('shop_bicycle', lambda node: node.tags.get('shop')== 'bicycle'),
    ('shop_vacant', lambda node: node.tags.get('shop')== 'vacant'),
    ('shop_clothes', lambda node: node.tags.get('shop')== 'clothes'),
    ('shop_car_parts', lambda node: node.tags.get('shop')== 'car_parts'),
    ('shop_sports', lambda node: node.tags.get('shop')== 'sports'),
    ('shop_florist', lambda node: node.tags.get('shop')== 'florist'),
    ('shop_hairdresser', lambda node: node.tags.get('shop')== 'hairdresser'),
    ('shop_greengrocer', lambda node: node.tags.get('shop')== 'greengrocer'),
    ('shop_butcher', lambda node: node.tags.get('shop')== 'butcher'),
    ('shop_bakery', lambda node: node.tags.get('shop')== 'bakery'),
    ('shop_ticket', lambda node: node.tags.get('shop')== 'ticket'),
    ('shop_car_repair', lambda node: node.tags.get('shop')== 'car_repair'),
    ('shop_kiosk', lambda node: node.tags.get('shop')== 'kiosk'),
    ('shop_electronics', lambda node: node.tags.get('shop')== 'electronics'),
    ('shop_chemist', lambda node: node.tags.get('shop')== 'chemist'),
    ('shop_outdoor', lambda node: node.tags.get('shop')== 'outdoor'),
    ('shop_computer', lambda node: node.tags.get('shop')== 'computer'),
    ('shop_car', lambda node: node.tags.get('shop')== 'car'),
    ('shop_garden_centre', lambda node: node.tags.get('shop')== 'garden_centre'),
    ('shop_shoes', lambda node: node.tags.get('shop')== 'shoes'),
    ('shop_hardware', lambda node: node.tags.get('shop')== 'hardware'),
    ('shop_variety_store', lambda node: node.tags.get('shop')== 'variety_store'),
    ('shop_party', lambda node: node.tags.get('shop')== 'party'),
    ('shop_stationery', lambda node: node.tags.get('shop')== 'stationery'),
    ('shop_optician', lambda node: node.tags.get('shop')== 'optician'),
    ('shop_fixme', lambda node: node.tags.get('shop')== 'fixme'),
    ('shop_second_hand', lambda node: node.tags.get('shop')== 'second_hand'),
    ('shop_hunting', lambda node: node.tags.get('shop')== 'hunting'),
    ('shop_newsagent', lambda node: node.tags.get('shop')== 'newsagent'),
    ('shop_pet', lambda node: node.tags.get('shop')== 'pet'),
    ('shop_department_store', lambda node: node.tags.get('shop')== 'department_store'),
    ('shop_hifi', lambda node: node.tags.get('shop')== 'hifi'),
    ('shop_video', lambda node: node.tags.get('shop')== 'video'),
    ('shop_curtain', lambda node: node.tags.get('shop')== 'curtain'),
    ('shop_dry_cleaning', lambda node: node.tags.get('shop')== 'dry_cleaning'),
    ('shop_unknown', lambda node: node.tags.get('shop')== 'unknown'),
    ('shop_frame', lambda node: node.tags.get('shop')== 'frame'),
    ('shop_shoe_repair', lambda node: node.tags.get('shop')== 'shoe_repair'),
    ('shop_pawnbroker', lambda node: node.tags.get('shop')== 'pawnbroker'),
    ('shop_fabric', lambda node: node.tags.get('shop')== 'fabric'),
    ('shop_mobile_phone', lambda node: node.tags.get('shop')== 'mobile_phone'),
    ('shop_bathroom_furnishing', lambda node: node.tags.get('shop')== 'bathroom_furnishing'),
    ('shop_shoe_repair;clothes_repair', lambda node: node.tags.get('shop')== 'shoe_repair;clothes_repair'),
    ('shop_tanning', lambda node: node.tags.get('shop')== 'tanning'),
    ('shop_travel_agency', lambda node: node.tags.get('shop')== 'travel_agency'),
    ('shop_farm', lambda node: node.tags.get('shop')== 'farm'),
    ('shop_ice_cream', lambda node: node.tags.get('shop')== 'ice_cream'),
    ('shop_doityourself; paint; car', lambda node: node.tags.get('shop')== 'doityourself; paint; car'),
    ('shop_gift', lambda node: node.tags.get('shop')== 'gift'),
    ('shop_bookmaker', lambda node: node.tags.get('shop')== 'bookmaker'),
    ('shop_beauty', lambda node: node.tags.get('shop')== 'beauty'),
    ('shop_electrical', lambda node: node.tags.get('shop')== 'electrical'),
    ('shop_religion', lambda node: node.tags.get('shop')== 'religion'),
    ('shop_houseware', lambda node: node.tags.get('shop')== 'houseware'),
    ('shop_fishing', lambda node: node.tags.get('shop')== 'fishing'),
    ('shop_radiotechnics', lambda node: node.tags.get('shop')== 'radiotechnics'),
    ('shop_tyres', lambda node: node.tags.get('shop')== 'tyres'),
    ('shop_cosmetics', lambda node: node.tags.get('shop')== 'cosmetics'),
    ('shop_laundry', lambda node: node.tags.get('shop')== 'laundry'),
    ('shop_photo', lambda node: node.tags.get('shop')== 'photo'),
    ('shop_yarn', lambda node: node.tags.get('shop')== 'yarn'),
    ('shop_confectionery', lambda node: node.tags.get('shop')== 'confectionery'),
    ('shop_medical_supply', lambda node: node.tags.get('shop')== 'medical_supply'),
    ('shop_bed', lambda node: node.tags.get('shop')== 'bed'),
    ('shop_tea', lambda node: node.tags.get('shop')== 'tea'),
    ('shop_seafood', lambda node: node.tags.get('shop')== 'seafood'),
    ('shop_kitchen', lambda node: node.tags.get('shop')== 'kitchen'),
    ('shop_electrogoods', lambda node: node.tags.get('shop')== 'electrogoods'),
    ('shop_windows', lambda node: node.tags.get('shop')== 'windows'),
    ('shop_coffee', lambda node: node.tags.get('shop')== 'coffee'),
    ('shop_pet_grooming', lambda node: node.tags.get('shop')== 'pet_grooming'),
    ('shop_tailor', lambda node: node.tags.get('shop')== 'tailor'),
    ('shop_repair', lambda node: node.tags.get('shop')== 'repair'),
    ('shop_general', lambda node: node.tags.get('shop')== 'general'),
    ('shop_musical_instrument', lambda node: node.tags.get('shop')== 'musical_instrument'),
    ('shop_interior_decoration', lambda node: node.tags.get('shop')== 'interior_decoration'),
    ('shop_electrotools', lambda node: node.tags.get('shop')== 'electrotools'),
    ('shop_deli', lambda node: node.tags.get('shop')== 'deli'),
    ('shop_bathroom', lambda node: node.tags.get('shop')== 'bathroom'),
    ('shop_bag', lambda node: node.tags.get('shop')== 'bag'),
    ('shop_billiard', lambda node: node.tags.get('shop')== 'billiard'),
    ('shop_copyshop', lambda node: node.tags.get('shop')== 'copyshop'),
    ('shop_paint', lambda node: node.tags.get('shop')== 'paint'),
    ('shop_cctv', lambda node: node.tags.get('shop')== 'cctv'),
    ('shop_craft', lambda node: node.tags.get('shop')== 'craft'),
    ('shop_photography', lambda node: node.tags.get('shop')== 'photography'),
    ('shop_glaziery', lambda node: node.tags.get('shop')== 'glaziery'),
    ('shop_photo_studio', lambda node: node.tags.get('shop')== 'photo_studio'),
    ('shop_solarium', lambda node: node.tags.get('shop')== 'solarium'),
    ('shop_clock', lambda node: node.tags.get('shop')== 'clock'),
    ('shop_lighting', lambda node: node.tags.get('shop')== 'lighting'),
    ('shop_music', lambda node: node.tags.get('shop')== 'music'),
    ('shop_other', lambda node: node.tags.get('shop')== 'other'),
    ('shop_doors', lambda node: node.tags.get('shop')== 'doors'),
    ('shop_anime', lambda node: node.tags.get('shop')== 'anime'),
    ('shop_clothes;shoes', lambda node: node.tags.get('shop')== 'clothes;shoes'),
    ('shop_furnishing', lambda node: node.tags.get('shop')== 'furnishing'),
    ('shop_trade', lambda node: node.tags.get('shop')== 'trade'),
    ('shop_fishmonger', lambda node: node.tags.get('shop')== 'fishmonger'),
    ('shop_carpet', lambda node: node.tags.get('shop')== 'carpet'),
    ('shop_motorcycle', lambda node: node.tags.get('shop')== 'motorcycle'),
    ('shop_heating', lambda node: node.tags.get('shop')== 'heating'),
    ('shop_honey', lambda node: node.tags.get('shop')== 'honey'),
    ('shop_tableware', lambda node: node.tags.get('shop')== 'tableware'),
    ('shop_dressmaker', lambda node: node.tags.get('shop')== 'dressmaker'),
    ('shop_dive', lambda node: node.tags.get('shop')== 'dive'),
    ('shop_watches', lambda node: node.tags.get('shop')== 'watches'),
    ('shop_funeral_directors', lambda node: node.tags.get('shop')== 'funeral_directors'),
    ('shop_camera', lambda node: node.tags.get('shop')== 'camera'),
    ('shop_massage', lambda node: node.tags.get('shop')== 'massage'),
    ('shop_underwear', lambda node: node.tags.get('shop')== 'underwear'),
    ('shop_outpost', lambda node: node.tags.get('shop')== 'outpost'),
    ('shop_nails', lambda node: node.tags.get('shop')== 'nails'),
    ('shop_medical', lambda node: node.tags.get('shop')== 'medical'),
    ('shop_clothes;toys', lambda node: node.tags.get('shop')== 'clothes;toys'),
    ('shop_food', lambda node: node.tags.get('shop')== 'food'),
    ('shop_tiles', lambda node: node.tags.get('shop')== 'tiles'),
    ('shop_service', lambda node: node.tags.get('shop')== 'service'),
    ('shop_fashion', lambda node: node.tags.get('shop')== 'fashion'),
    ('shop_spices', lambda node: node.tags.get('shop')== 'spices'),
    ('shop_motorcycle_repair', lambda node: node.tags.get('shop')== 'motorcycle_repair'),
    ('shop_crockery', lambda node: node.tags.get('shop')== 'crockery'),
    ('shop_wedding', lambda node: node.tags.get('shop')== 'wedding'),
    ('shop_money_lender', lambda node: node.tags.get('shop')== 'money_lender'),
    ('shop_sewing', lambda node: node.tags.get('shop')== 'sewing'),
    ('shop_tyres_repair', lambda node: node.tags.get('shop')== 'tyres_repair'),
    ('shop_tools', lambda node: node.tags.get('shop')== 'tools'),
    ('shop_car_parts;bicycle;motorcycle;hardware', lambda node: node.tags.get('shop')== 'car_parts;bicycle;motorcycle;hardware'),
    ('shop_copyshop;shoe_repair;locksmith', lambda node: node.tags.get('shop')== 'copyshop;shoe_repair;locksmith'),
    ('shop_dairy', lambda node: node.tags.get('shop')== 'dairy'),
    ('shop_orthopedic', lambda node: node.tags.get('shop')== 'orthopedic'),
    ('shop_milk', lambda node: node.tags.get('shop')== 'milk'),
    ('shop_tea;coffee', lambda node: node.tags.get('shop')== 'tea;coffee'),
    ('shop_gift;video;stationery', lambda node: node.tags.get('shop')== 'gift;video;stationery'),
    ('shop_dvd', lambda node: node.tags.get('shop')== 'dvd'),
    ('shop_stone', lambda node: node.tags.get('shop')== 'stone'),
    ('shop_scuba_diving', lambda node: node.tags.get('shop')== 'scuba_diving'),
    ('shop_hobby', lambda node: node.tags.get('shop')== 'hobby'),
    ('shop_wallpaper', lambda node: node.tags.get('shop')== 'wallpaper'),
    ('shop_boat', lambda node: node.tags.get('shop')== 'boat'),
    ('shop_perfumery', lambda node: node.tags.get('shop')== 'perfumery'),
    ('shop_orthopaedist', lambda node: node.tags.get('shop')== 'orthopaedist'),
    ('shop_monuments', lambda node: node.tags.get('shop')== 'monuments'),
    ('shop_translation', lambda node: node.tags.get('shop')== 'translation'),
    ('shop_atv', lambda node: node.tags.get('shop')== 'atv'),
    ('shop_trinkets', lambda node: node.tags.get('shop')== 'trinkets'),
    ('shop_fireworks', lambda node: node.tags.get('shop')== 'fireworks'),
    ('shop_games', lambda node: node.tags.get('shop')== 'games'),
    ('shop_key_cutter', lambda node: node.tags.get('shop')== 'key_cutter'),
    ('shop_hearing_aids', lambda node: node.tags.get('shop')== 'hearing_aids'),
    ('shop_leather', lambda node: node.tags.get('shop')== 'leather'),
    ('shop_watch', lambda node: node.tags.get('shop')== 'watch'),
    ('shop_shoes_repair', lambda node: node.tags.get('shop')== 'shoes_repair'),
    ('shop_security', lambda node: node.tags.get('shop')== 'security'),
    ('shop_landscape_design', lambda node: node.tags.get('shop')== 'landscape_design'),
    ('shop_fabrics', lambda node: node.tags.get('shop')== 'fabrics'),
    ('shop_electronic_parts', lambda node: node.tags.get('shop')== 'electronic_parts'),
    ('shop_dj', lambda node: node.tags.get('shop')== 'dj'),
    ('shop_model', lambda node: node.tags.get('shop')== 'model'),
    ('shop_furnace', lambda node: node.tags.get('shop')== 'furnace'),
    ('shop_e-cigarette', lambda node: node.tags.get('shop')== 'e-cigarette'),
    ('shop_maps', lambda node: node.tags.get('shop')== 'maps'),
    ('shop_video_games', lambda node: node.tags.get('shop')== 'video_games'),
    ('shop_paintball', lambda node: node.tags.get('shop')== 'paintball'),
    ('shop_animal_feed', lambda node: node.tags.get('shop')== 'animal_feed'),
    ('shop_bodybuilding_supplement', lambda node: node.tags.get('shop')== 'bodybuilding_supplement'),
    ('shop_consumer electronics', lambda node: node.tags.get('shop')== 'consumer electronics'),
    ('shop_gas', lambda node: node.tags.get('shop')== 'gas'),
    ('shop_storage_rental', lambda node: node.tags.get('shop')== 'storage_rental'),
    ('shop_cheese', lambda node: node.tags.get('shop')== 'cheese'),
    ('shop_ethnic', lambda node: node.tags.get('shop')== 'ethnic'),
    ('shop_locksmith', lambda node: node.tags.get('shop')== 'locksmith'),
    ('shop_energy', lambda node: node.tags.get('shop')== 'energy'),
    ('shop_lamps', lambda node: node.tags.get('shop')== 'lamps'),
    ('shop_copyshop;photo_studio', lambda node: node.tags.get('shop')== 'copyshop;photo_studio'),
    ('shop_pyrotechnics', lambda node: node.tags.get('shop')== 'pyrotechnics'),
    ('shop_caviar', lambda node: node.tags.get('shop')== 'caviar'),
    ('shop_swimming_pool', lambda node: node.tags.get('shop')== 'swimming_pool'),
    ('shop_household', lambda node: node.tags.get('shop')== 'household'),
    ('shop_auction_house', lambda node: node.tags.get('shop')== 'auction_house'),
    ('shop_hairdresser_supply', lambda node: node.tags.get('shop')== 'hairdresser_supply'),
    ('shop_bag;shoes;accessories', lambda node: node.tags.get('shop')== 'bag;shoes;accessories'),
    ('shop_accessories', lambda node: node.tags.get('shop')== 'accessories'),
    ('shop_houseware;furniture', lambda node: node.tags.get('shop')== 'houseware;furniture'),
    ('shop_car_seats', lambda node: node.tags.get('shop')== 'car_seats'),
    ('shop_electrician', lambda node: node.tags.get('shop')== 'electrician'),
    ('shop_cleaning_equipment', lambda node: node.tags.get('shop')== 'cleaning_equipment'),
    ('shop_beauty_pets', lambda node: node.tags.get('shop')== 'beauty_pets'),
    ('shop_pastry', lambda node: node.tags.get('shop')== 'pastry'),
    ('shop_window_blind', lambda node: node.tags.get('shop')== 'window_blind'),
    ('shop_water_filter', lambda node: node.tags.get('shop')== 'water_filter'),
    ('shop_bedclothes', lambda node: node.tags.get('shop')== 'bedclothes'),
    ('shop_knife', lambda node: node.tags.get('shop')== 'knife'),
    ('shop_shotball', lambda node: node.tags.get('shop')== 'shotball'),
    ('shop_duty_free', lambda node: node.tags.get('shop')== 'duty_free'),
    ('shop_cosmetics; perfumery', lambda node: node.tags.get('shop')== 'cosmetics; perfumery'),
    ('shop_estate_agent', lambda node: node.tags.get('shop')== 'estate_agent'),
    ('shop_candles', lambda node: node.tags.get('shop')== 'candles'),
    ('shop_manicure', lambda node: node.tags.get('shop')== 'manicure'),
    ('shop_stones', lambda node: node.tags.get('shop')== 'stones'),
    ('shop_wig', lambda node: node.tags.get('shop')== 'wig'),
    ('shop_storage', lambda node: node.tags.get('shop')== 'storage'),
    ('shop_appliance', lambda node: node.tags.get('shop')== 'appliance'),
    ('shop_plumbing', lambda node: node.tags.get('shop')== 'plumbing'),
    ('shop_brewing_supplies', lambda node: node.tags.get('shop')== 'brewing_supplies'),
    ('shop_hvac', lambda node: node.tags.get('shop')== 'hvac'),
    ('shop_beauty;boutique', lambda node: node.tags.get('shop')== 'beauty;boutique'),
    ('shop_water', lambda node: node.tags.get('shop')== 'water'),
    ('shop_nuts', lambda node: node.tags.get('shop')== 'nuts'),
    ('shop_bijouterie', lambda node: node.tags.get('shop')== 'bijouterie'),
    ('shop_chocolate', lambda node: node.tags.get('shop')== 'chocolate'),
    ('shop_window_construction', lambda node: node.tags.get('shop')== 'window_construction'),
    ('shop_handicraft', lambda node: node.tags.get('shop')== 'handicraft'),
    ('shop_printing', lambda node: node.tags.get('shop')== 'printing'),
    ('shop_dance', lambda node: node.tags.get('shop')== 'dance'),
    ('shop_flooring', lambda node: node.tags.get('shop')== 'flooring'),
    ('shop_consignment', lambda node: node.tags.get('shop')== 'consignment'),
    ('shop_books;stationery', lambda node: node.tags.get('shop')== 'books;stationery'),
    ('shop_shoemaker', lambda node: node.tags.get('shop')== 'shoemaker'),
    ('shop_agrarian', lambda node: node.tags.get('shop')== 'agrarian'),
    ('shop_vacuum_cleaner', lambda node: node.tags.get('shop')== 'vacuum_cleaner'),
    ('shop_car_parts;car_repair', lambda node: node.tags.get('shop')== 'car_parts;car_repair'),
    ('shop_theatre', lambda node: node.tags.get('shop')== 'theatre'),
    ('shop_beads', lambda node: node.tags.get('shop')== 'beads'),
    ('shop_baby_gools', lambda node: node.tags.get('shop')== 'baby_gools'),
    ('shop_printer_cartridges', lambda node: node.tags.get('shop')== 'printer_cartridges'),
    ('shop_rental', lambda node: node.tags.get('shop')== 'rental'),
    ('shop_power_tools', lambda node: node.tags.get('shop')== 'power_tools'),
    ('shop_electronics_repair', lambda node: node.tags.get('shop')== 'electronics_repair')



]

import osmread
from tqdm import tqdm_notebook

LAT_MIN, LAT_MAX = min(X['lat'].min()), max(X['lat'].max())
LON_MIN, LON_MAX = min(X['long'].min()), max(X['long'].max())

print( LAT_MIN, LAT_MAX , LON_MIN, LON_MAX)
osm_file = osmread.parse_file('../data/RU-MOS.osm.pbf')
tagged_nodes = [
    entry
    for entry in tqdm_notebook(osm_file, total=18976998)
    if isinstance(entry, osmread.Node)
    if len(entry.tags) > 0
    if (LAT_MIN < entry.lat < LAT_MAX) and (LON_MIN < entry.lon < LON_MAX)
]

'''nodes'''
import pickle

with open('../data/tagged_nodes.pickle', 'wb') as fout:
    pickle.dump(tagged_nodes, fout, protocol=pickle.HIGHEST_PROTOCOL)
    
df = pd.DataFrame(tagged_nodes)

def unpack(df, column, fillna=None):
    ret = None
    if fillna is None:
        ret = pd.concat([df, pd.DataFrame((d for idx, d in df[column].iteritems()))], axis=1)
        del ret[column]
    else:
        ret = pd.concat([df, pd.DataFrame((d for idx, d in df[column].iteritems())).fillna(fillna)], axis=1)
        del ret[column]
    return ret

df=unpack(df, 'tags', 0)
a=list(df.columns)



